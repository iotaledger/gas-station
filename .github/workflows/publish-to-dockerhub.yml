name: publish to DockerHub

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to publish under, defaults to latest"
        required: false
        default: latest
      branch:
        description: "Branch to run publish from"
        required: true
      is-dry-run:
        description: "Run in dry-run mode"
        type: boolean
        required: false
        default: true

jobs:
  push_to_registry:
    environment: release
    name: Push Docker images to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - {
              binary_name: "iota-gas-station",
              docker_repo: "atoicafe/gas-station",
              runner: "ubuntu-latest",
              platform: "linux/amd64",
            }
          - {
              binary_name: "iota-gas-station",
              docker_repo: "atoicafe/gas-station",
              runner: "macos-latest",
              platform: "linux/arm64/v8",
            }

          # - {
          #     binary_name: "tool",
          #     docker_repo: "atoicafe/gas-station-tool",
          #     runner: "ubuntu-latest",
          #     platform: "linux/amd64",
          #   }
          # - {
          #     binary_name: "tool",
          #     docker_repo: "atoicafe/gas-station-tool",
          #     runner: "macos-latest",
          #     platform: "linux/arm64/v8",
          #   }
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Log in to Docker Hub
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          username: ${{ secrets.IOTALEDGER_DOCKER_USERNAME }}
          password: ${{ secrets.IOTALEDGER_DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Local Image Names
        id: names
        run: |
          echo "local_image=${{ matrix.config.binary_name }}-${{ matrix.config.runner }}" >> $GITHUB_OUTPUT
          echo "ext_image=${{ matrix.config.docker_repo }}:${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT

      - name: Build docker image (DRY-RUN) ${{ matrix.config.docker_repo }} - ${{ matrix.config.platform }}
        if: ${{ github.event.inputs.is-dry-run == 'true' }}
        run: |
          chmod +x docker/build.sh
          ENTRY_BINARY=${{ matrix.config.binary_name }} docker/build.sh \
          -t ${{ steps.names.outputs.ext_image }}  \
          --platform ${{ matrix.config.platform }}

      - name: Build & Push docker image Build docker image ${{ matrix.config.docker_repo }} - ${{ matrix.config.platform }}
        if: ${{ github.event.inputs.is-dry-run == 'false' }}
        id: build-push-image
        run: |
          chmod +x docker/build.sh
          ENTRY_BINARY=${{ matrix.config.binary_name }} docker/build.sh \
          --platform ${{ matrix.config.platform }} \
          --output type=image,"name=${{ matrix.config.docker_repo }}",push-by-digest=true,name-canonical=true,push=true \
          --iidfile docker.id

          DOCKER_ID=$(cat docker.id)
          DIGEST=$(docker manifest inspect ${{ matrix.config.docker_repo }}@${DOCKER_ID} | jq -r '.manifests[0].digest')
          echo "Obtained the docker image $DIGEST"
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

      - name: Export digest
        if: ${{ github.event.inputs.is-dry-run == 'false' }}
        run: |
          mkdir -p ${{ runner.temp }}/digests/${{ github.sha }}
          digest="${{ steps.build-push-image.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${{ github.sha}}/${digest#sha256:}"

      - name: Upload digest
        if: ${{ steps.build-push-image.outputs.digest != '' }}
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: digests-${{ github.sha }}-${{ matrix.config.binary_name }}-${{ matrix.config.runner }}
          path: ${{ runner.temp }}/digests/${{ github.sha }}/*
          if-no-files-found: error
          retention-days: 1

  push-index:
    if: ${{ github.event.inputs.is-dry-run == 'false' }}
    environment: release
    needs: push_to_registry
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - {
              binary_name: "iota-gas-station",
              docker_repo: "atoicafe/gas-station",
            }
          # - { binary_name: "tool", docker_repo: "atoicafe/gas-station-tool" }

    steps:
      - name: Login to Docker Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.IOTALEDGER_DOCKER_USERNAME }}
          password: ${{ secrets.IOTALEDGER_DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Download digests
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-${{ github.sha }}-${{ matrix.config.binary_name }}-*
          merge-multiple: true

      - name: Push multi-platform index
        run: |
          cmd="docker buildx imagetools create --tag ${{ matrix.config.docker_repo }}:${{ github.event.inputs.tag }}"
          for file in ${{ runner.temp }}/digests/*; do
            # Extract the filename (which is the hash).
            hash=$(basename "$file")
            # Append the amend option for the current hash.
            cmd+="  ${{ matrix.config.docker_repo }}@sha256:$hash"
          done
          echo -e "$cmd"
          eval "$cmd"
